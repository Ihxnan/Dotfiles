{
    "Starter Template": {
        "prefix": "acm",
        "body": [
            "#include <algorithm>",
            "#include <cmath>",
            "#include <cstring>",
            "#include <iostream>",
            "#include <map>",
            "#include <queue>",
            "#include <unordered_map>",
            "#include <vector>",
            "",
            "#define x first",
            "#define y second",
            "#define all(v) v.begin(), v.end()",
            "#define endl '\\n'",
            "",
            "using namespace std;",
            "",
            "using ll = long long;",
            "using ull = unsigned long long;",
            "using vi = vector<int>;",
            "using vvi = vector<vi>;",
            "using vl = vector<ll>;",
            "using vvl = vector<vl>;",
            "using pii = pair<int, int>;",
            "using pll = pair<ll, ll>;",
            "using psi = pair<string, int>;",
            "",
            "",
            "const int iINF = 0x3f3f3f3f;",
            "const ll lINF = 0x3f3f3f3f3f3f3f3f;",
            "const int mod = 998244353;",
            "const ll MOD = 1000000007;",
            "",
            "ll gcd(ll a, ll b)",
            "{",
            "    return b ? gcd(b, a % b) : a;",
            "}",
            "",
            "template <class T, class... Rest> void print(const T &x, const Rest &...rest);",
            "",
            "void print()",
            "{",
            "    cout << endl;",
            "}",
            "",
            "template <class T> void _print(const T &x)",
            "{",
            "    cout << x << ' ';",
            "}",
            "",
            "template <class T> void _print(const vector<T> &v)",
            "{",
            "    for (auto &p : v)",
            "        _print(p);",
            "    print();",
            "}",
            "",
            "template <class T, class S> void _print(const map<T, S> &mp)",
            "{",
            "    for (auto &p : mp)",
            "        print(p.x, p.y);",
            "}",
            "",
            "template <class T, class S> void _print(const unordered_map<T, S> &mp)",
            "{",
            "    for (auto &p : mp)",
            "        print(p.x, p.y);",
            "}",
            "",
            "template <class T, class... Rest> void print(const T &x, const Rest &...rest)",
            "{",
            "    _print(x);",
            "    print(rest...);",
            "}",
            "",
            "void solve()",
            "{",
            "    $0",
            "}",
            "",
            "signed main()",
            "{",
            "    ios::sync_with_stdio(false);",
            "    cin.tie(nullptr);",
            "    cout.tie(nullptr);",
            "    int t = 1;",
            "    $1cin >> t;",
            "    while (t--)",
            "        solve();",
            "    return 0;",
            "}"
        ],
        "description": "Standard starter template for a tiny C++ program"
    },

    "test something":{
        "prefix": "test",
        "body": [
            "#include <algorithm>",
            "#include <cmath>",
            "#include <cstring>",
            "#include <queue>",
            "#include <debugutils>",
            "",
            "using namespace std;",
            "",
            "signed main()",
            "{",
            "    $0",
            "    return 0;",
            "}"
        ]
    }
}
